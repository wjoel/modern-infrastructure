---
- name: Add Package Cloud key
  apt_key: url=https://packagecloud.io/gpg.key state=present

- name: Install apt-transport-https
  apt: name=apt-transport-https state=present

- name: Add Grafana repository
  apt_repository:
    repo: "deb https://packagecloud.io/grafana/stable/debian/ jessie main"
    state: present
  register: grafana_repo_added

- name: Update apt cache
  when: grafana_repo_added.changed
  apt: update_cache=yes

- name: Install Grafana
  apt: name=grafana state=present
  register: grafana_installed

- name: Configure Grafana
  template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    owner: root
    group: grafana
    mode: "0640"
  register: grafana_configured

- name: Enable Grafana
  service: name=grafana-server enabled=yes

- name: Start Grafana
  service: name=grafana-server state=started
  register: grafana_server_started

- name: Restart Grafana
  when: grafana_configured.changed
  service: name=grafana-server state=restarted

- name: Wait for Grafana REST API to become available
  wait_for:
    host: "{{ ansible_eth1.ipv4.address }}"
    port: 3000
    timeout: 180

- name: Install httplib2 for uri action
  apt: name=python-httplib2 state=present
  register: httplib2

- name: Retrieve list of data sources
  uri:
    url: "http://{{ ansible_eth1.ipv4.address }}:3000/api/datasources"
    method: GET
    return_content: yes
    user: admin
    password: "{{ lookup('password', playbook_dir + '/passwords/grafana_password chars=ascii_letters,digits,hexdigits length=20') }}"
    force_basic_auth: yes
  register: grafana_datasources

- name: Extract names of data sources
  set_fact:
    datasource_names: "{{ grafana_datasources.content | from_json | map(attribute='name') | list }}"

- name: Create Prometheus datasource
  when: ("prometheus_datasource" not in datasource_names)
  uri:
    url: "http://{{ ansible_eth1.ipv4.address }}:3000/api/datasources"
    method: POST
    body: " {{ lookup('template', role_path + '/templates/create_prometheus_datasource.json.j2', convert_data=False) }}"
    HEADER_Content-Type: "application/json"
    user: admin
    password: "{{ lookup('password', playbook_dir + '/passwords/grafana_password chars=ascii_letters,digits,hexdigits length=20') }}"
    force_basic_auth: yes
  register: prometheus_datasource_created

- name: Create Prometheus dashboard
  uri:
    url: "http://{{ ansible_eth1.ipv4.address }}:3000/api/dashboards/db"
    method: POST
    body: "{{ lookup('template', role_path + '/templates/dashboard.json.j2', convert_data=False) | string }}"
    HEADER_Content-Type: "application/json"
    user: admin
    password: "{{ lookup('password', playbook_dir + '/passwords/grafana_password chars=ascii_letters,digits,hexdigits length=20') }}"
    force_basic_auth: yes
